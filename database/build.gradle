apply plugin: 'com.android.library'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // Room
    def room_version = "1.1.1"
    api 'androidx.room:room-runtime:2.0.0'
//    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    api 'androidx.legacy:legacy-support-v4:1.0.0'
    annotationProcessor 'androidx.room:room-compiler:2.0.0'


    // Live Data
    def lifecycle_version = "2.2.0"
    // ViewModel
    api "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    // LiveData
    api "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
    // LifeCycles only (without ViewModel or LiveData)
    api "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"

    // Saved state module for ViewModel
    api "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // alternately - if using Java8, use the following instead of lifecycle-compiler
    api "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    api 'com.google.code.gson:gson:2.8.5'

    // Multi dex
    api "androidx.multidex:multidex:2.0.1"

}